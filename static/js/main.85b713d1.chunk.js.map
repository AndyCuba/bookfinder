{"version":3,"sources":["style.tsx","hooks/reduxHooks.ts","helpers/helpers.ts","redux/reducers/booksDataReducer/booksDataReducer.ts","redux/reducers/booksDataReducer/selectors.ts","components/SearchForm/SearchForm.tsx","components/Sortings/style.tsx","components/Sortings/Sortings.tsx","images/headerBackground.jpg","components/Header/style.tsx","components/Header/Header.tsx","pages/BookPage/style.tsx","pages/BookPage/BookPage.tsx","components/BookCard/style.tsx","components/BookCard/BookCard.tsx","components/LoadButton/style.tsx","components/LoadButton/LoadButton.tsx","components/Loader/style.tsx","components/Loader/Loader.tsx","pages/HomePage/style.tsx","pages/HomePage/HomePage.tsx","App.tsx","redux/rootReducer.ts","services/createCustomInstance.ts","services/api/booksApi.ts","redux/sagas/getBooksDataSaga.ts","redux/rootSaga.ts","redux/store.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","AppWrapper","styled","div","useAppDispatch","useDispatch","useAppSelector","useSelector","getUniqueBooks","arr","tmpArray","filter","book","indexOf","id","push","bookCheck","GET_DATA_REQUESTED","GET_DATA_SUCCEDED","GET_DATA_FAILED","SET_SEARCHFIELD","SET_CATEGORY","SET_SORTING","CHANGE_OFFSET","RESET_BOOKSSTATE","requestData","searchText","sorting","offset","type","payload","setCategory","category","changeOffset","initialBooksState","books","totalItems","items","searchfield","isFetching","error","searchfieldSelector","state","booksData","sortingSelector","offsetSelector","booksSelector","categorySelector","totalItemsSelector","isFetchingSelector","SearchForm","dispatch","history","useHistory","searchForBooks","useEffect","onSubmit","e","preventDefault","onChange","value","target","SortingsWrapper","Sortings","currentCategory","categories","Set","volumeInfo","map","handleChange","htmlFor","Array","from","index","defaultValue","StyledHeader","header","backgroundImage","StyledTitle","h1","Header","StyledImage","props","imageUrl","ImageWrapper","BookPageWrapper","DescriptionWrapper","BookPage","useParams","authors","description","imageLinks","title","thumbnail","author","p","StyledCard","Link","StyledAuthors","StyledCategory","BookCard","to","slice","StyledButton","LoadButton","onClick","load","keyframes","StyledLoader","Loader","StyledCardWrapper","StyledTotalItems","StyledHomePage","HomePage","App","exact","path","component","rootReducer","combineReducers","action","config","headers","API","customConfig","newConfig","instance","axios","create","createInstance","getBooksData","get","then","data","catch","getBooksDataSaga","watchGetBooksData","call","put","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","composedEnhancers","composeWithDevTools","store","createStore","run","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.85b713d1.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst AppWrapper = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\n\r\n\r\nexport { GlobalStyle, AppWrapper };","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '../redux/store';\r\n\r\n// Typed useSelector and useDispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { BookType } from '../redux/reducers/booksDataReducer/booksDataTypes';\r\n\r\n\r\n//Retruns array with unique books\r\nfunction getUniqueBooks(arr: BookType[])  {\r\n    \r\n    let tmpArray: Array<string> = [];\r\n     function bookCheck(book: BookType) {\r\n         if (tmpArray.indexOf(book.id) === -1) {\r\n            tmpArray.push(book.id);\r\n            return true\r\n         }\r\n         return false;\r\n    };\r\n\r\n    if(arr !== null) {\r\n       return arr.filter((book: BookType): book is BookType => bookCheck(book)); \r\n    } else { return arr }\r\n    \r\n};\r\n\r\nexport { getUniqueBooks };","import { getUniqueBooks } from '../../../helpers/helpers';\r\nimport { \r\n    IinitialBooksStateType,\r\n    RequestDataActionType,\r\n    RequestDataSuccessActionType,\r\n    RequestDataFailedActionType,\r\n    ActionsTypes,\r\n    SetSearchfieldActionType,\r\n    SetCategoryActionType,\r\n    SetSortingActionType,\r\n    ChangeOffsetActionType,\r\n    RequestDataSuccessPayloadType,\r\n    ResetBooksStateActionType\r\n} from './booksDataTypes';\r\n\r\n// ACTIONS\r\nconst GET_DATA_REQUESTED = 'BOOKS/GET_DATA_REQUESTED';\r\nconst GET_DATA_SUCCEDED = 'BOOKS/GET_DATA_SUCCEDED';\r\nconst GET_DATA_FAILED = 'BOOKS/GET_DATA_FAILED';\r\nconst SET_SEARCHFIELD = 'BOOKS/SET_SEARCHFIELD';\r\nconst SET_CATEGORY = 'BOOKS/SET_CATEGORY';\r\nconst SET_SORTING = 'BOOKS/SET_SORTING';\r\nconst CHANGE_OFFSET = 'BOOKS/CHANGE_OFFSET';\r\nconst RESET_BOOKSSTATE = 'BOOKS/RESET_BOOKSSTATE';\r\n\r\n// ACTION CREATORS\r\nconst requestData = (searchText: string, sorting: string, offset: number): RequestDataActionType  => ({\r\n    type: GET_DATA_REQUESTED,\r\n    payload: {\r\n        searchText,\r\n        sorting,\r\n        offset\r\n    }\r\n});\r\n\r\nconst requestDataSuccess = (booksData: RequestDataSuccessPayloadType): RequestDataSuccessActionType => ({\r\n    type: GET_DATA_SUCCEDED, \r\n    payload: booksData\r\n});\r\n\r\nconst requestDataError = (error: string): RequestDataFailedActionType => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error\r\n});\r\n\r\nconst setSearchfield = (text: string): SetSearchfieldActionType => ({\r\n    type: SET_SEARCHFIELD,\r\n    payload: text\r\n});\r\n\r\nconst setCategory = (category: string): SetCategoryActionType => ({\r\n    type: SET_CATEGORY,\r\n    payload: category\r\n});\r\n\r\nconst setSorting = (sorting: string): SetSortingActionType => ({\r\n    type: SET_SORTING,\r\n    payload: sorting\r\n});\r\n\r\nconst changeOffset = (offset: number): ChangeOffsetActionType => ({\r\n    type: CHANGE_OFFSET,\r\n    payload: offset\r\n});\r\n\r\nconst resetBooksState = (): ResetBooksStateActionType => ({\r\n    type: RESET_BOOKSSTATE\r\n});\r\n\r\n\r\nconst initialBooksState: IinitialBooksStateType = {\r\n    books: {\r\n        totalItems: null,\r\n        items: []\r\n    },\r\n    searchfield: '',\r\n    isFetching: false,\r\n    category: 'All',\r\n    sorting: 'relevance',\r\n    offset: 0,\r\n    error: null\r\n};\r\n\r\n// REDUCER\r\nconst booksDataReducer = (state = initialBooksState, action: ActionsTypes): IinitialBooksStateType => {\r\n    switch(action.type) {\r\n        case GET_DATA_REQUESTED:\r\n            return { \r\n                ...state,\r\n                isFetching: true \r\n            };\r\n        case GET_DATA_SUCCEDED: \r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                books: { \r\n                    ...state.books,\r\n                    totalItems: action.payload.totalItems,\r\n                    items: getUniqueBooks([\r\n                        ...state.books.items,\r\n                        ...action.payload.items\r\n                    ])\r\n                }\r\n            };\r\n        case GET_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                error: action.payload\r\n            };\r\n        case SET_SEARCHFIELD: \r\n            return {\r\n                ...state,\r\n                searchfield: action.payload\r\n            };\r\n        case SET_CATEGORY: \r\n            return {\r\n                ...state,\r\n                category: action.payload\r\n            };\r\n        case SET_SORTING: \r\n            return {\r\n                ...state,\r\n                sorting: action.payload\r\n            };\r\n        case CHANGE_OFFSET: \r\n            return {\r\n                ...state,\r\n                offset: state.offset + action.payload\r\n            };\r\n        case RESET_BOOKSSTATE: \r\n            return {\r\n                ...state,\r\n                books: {\r\n                    totalItems: null,\r\n                    items: []\r\n                }\r\n            };\r\n        default:\r\n            return { ...state };\r\n    };\r\n};\r\n\r\nexport { \r\n    booksDataReducer,\r\n    GET_DATA_REQUESTED,\r\n    GET_DATA_SUCCEDED,\r\n    GET_DATA_FAILED,\r\n    SET_SEARCHFIELD,\r\n    SET_CATEGORY,\r\n    SET_SORTING,\r\n    CHANGE_OFFSET,\r\n    RESET_BOOKSSTATE,\r\n    requestData,\r\n    requestDataSuccess,\r\n    requestDataError,\r\n    setSearchfield,\r\n    setCategory,\r\n    setSorting,\r\n    changeOffset,\r\n    resetBooksState\r\n};","import { AppStateType } from '../../store';\r\n\r\nconst searchfieldSelector = (state: AppStateType) => state.booksData.searchfield;\r\nconst sortingSelector = (state: AppStateType) => state.booksData.sorting;\r\nconst offsetSelector = (state: AppStateType) => state.booksData.offset;\r\nconst booksSelector = (state: AppStateType) => state.booksData.books.items;\r\nconst categorySelector = (state: AppStateType) => state.booksData.category;\r\nconst totalItemsSelector = (state: AppStateType) => state.booksData.books.totalItems;\r\nconst isFetchingSelector = (state: AppStateType) => state.booksData.isFetching;\r\n\r\n\r\n\r\nexport { \r\n    searchfieldSelector, \r\n    sortingSelector,\r\n    offsetSelector,\r\n    booksSelector,\r\n    categorySelector,\r\n    totalItemsSelector,\r\n    isFetchingSelector\r\n};","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/reduxHooks';\r\nimport { \r\n    changeOffset,\r\n    requestData, \r\n    resetBooksState, \r\n    setCategory, \r\n    setSearchfield \r\n} from '../../redux/reducers/booksDataReducer/booksDataReducer';\r\nimport { \r\n    offsetSelector, \r\n    searchfieldSelector, \r\n    sortingSelector \r\n} from '../../redux/reducers/booksDataReducer/selectors';\r\n\r\n\r\nconst SearchForm = () => {\r\n    const dispatch = useAppDispatch();\r\n    const history = useHistory();\r\n    const searchfield = useAppSelector(searchfieldSelector);\r\n    const sorting = useAppSelector(sortingSelector);\r\n    const offset = useAppSelector(offsetSelector);\r\n\r\n    //Sets initial category, set offset to 0, resets Books State, dispatches request\r\n    const searchForBooks = () => {\r\n        if(searchfield) {\r\n            history.push('/');\r\n            dispatch(setCategory('All'));\r\n            dispatch(changeOffset(-offset));\r\n            dispatch(resetBooksState());\r\n            dispatch(requestData(searchfield, sorting, offset));\r\n        };\r\n    };\r\n\r\n    //Send request if sorting will be changed\r\n    useEffect(() => {\r\n        searchForBooks();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sorting]);\r\n\r\n    const handleSubmit = (e: React.FormEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        searchForBooks();\r\n    };\r\n\r\n    // Set searchfield in state\r\n    const handleChange = (e: React.FormEvent<EventTarget>) => {\r\n        const { value } = e.target as HTMLInputElement;\r\n        dispatch(setSearchfield(value));\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" onChange={handleChange} value={searchfield}/>\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchForm;","import styled from 'styled-components';\r\n\r\nconst SortingsWrapper = styled.div`\r\n    color: white;\r\n`;\r\n\r\nexport { SortingsWrapper };","\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/reduxHooks';\r\nimport { setCategory, setSorting } from '../../redux/reducers/booksDataReducer/booksDataReducer';\r\nimport { booksSelector, categorySelector } from '../../redux/reducers/booksDataReducer/selectors';\r\nimport { SortingsWrapper } from './style';\r\n\r\nconst Sortings = () => {\r\n    const dispatch = useAppDispatch();\r\n    const books = useAppSelector(booksSelector);\r\n    const currentCategory = useAppSelector(categorySelector);\r\n    \r\n    //Create unique categories from books\r\n    const categories = new Set(books?.filter(book => book.volumeInfo.categories)\r\n        .map(book => book.volumeInfo?.categories[0]));\r\n\r\n    //Depending on the select tag Id sets Category or Sorting\r\n    const handleChange = (e: React.FormEvent<EventTarget>) => {\r\n        const { value, id } = e.target as HTMLSelectElement;\r\n        if(id === 'category') {\r\n            dispatch(setCategory(value));\r\n        } else if(id === 'sorting'){\r\n            dispatch(setSorting(value));\r\n        };    \r\n    };\r\n\r\n    //Shows categories and sorting selectors if state contains books\r\n    return(\r\n        <>\r\n            {\r\n                books[0] && \r\n                <SortingsWrapper>\r\n                    <div>\r\n                        <label htmlFor=\"category\">Categories</label>\r\n                        <select id=\"category\" onChange={handleChange} value={currentCategory}>\r\n                            <option value=\"All\">All</option>\r\n                        {Array.from(categories).map((category, index) => \r\n                            <option key={index} value={category}>{category}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"sorting\">Sorting by</label>\r\n                        <select id=\"sorting\" onChange={handleChange} defaultValue={currentCategory}>\r\n                            <option value=\"relevance\">relevance</option>\r\n                            <option value=\"newest\">newest</option>\r\n                        </select>\r\n                    </div>\r\n                </SortingsWrapper>               \r\n            }            \r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Sortings;","export default __webpack_public_path__ + \"static/media/headerBackground.48ebd918.jpg\";","import styled from 'styled-components';\r\nimport backgroundImage from '../../images/headerBackground.jpg';\r\n\r\nconst StyledHeader = styled.header`\r\n    padding: 2rem 0;\r\n    background: url(${backgroundImage}) center/cover;\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n    text-align: center;\r\n    padding: 1rem;\r\n    color: white;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport { StyledHeader, StyledTitle };","import { AppWrapper } from '../../style';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport Sortings from '../Sortings/Sortings';\r\nimport { StyledHeader, StyledTitle } from './style';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <StyledHeader>\r\n            <AppWrapper>\r\n                <StyledTitle>Search for books</StyledTitle>\r\n                <SearchForm />\r\n                <Sortings />\r\n            </AppWrapper>\r\n        </StyledHeader>\r\n    );\r\n};\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nconst StyledImage = styled.div`\r\n    width: 10rem;\r\n    height: 15rem;\r\n    background: url(${(props: { imageUrl: string}) => props.imageUrl ? props.imageUrl : 'none'}) center/cover;\r\n    box-shadow: 0px 3px 8px 3px rgba(34, 60, 80, 0.2);\r\n    align-self: center;\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n    width: 20rem;\r\n    height: 24rem;\r\n    background-color: rgb(242, 241, 237);\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst BookPageWrapper = styled.div`\r\n    padding: 1rem 0;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(9rem, 24rem));\r\n    justify-items: center;\r\n    grid-row-gap: 2rem;\r\n`;\r\n\r\nconst DescriptionWrapper = styled.div`\r\n    p {\r\n        padding: 1rem 0;\r\n    }\r\n`;\r\n\r\nexport { \r\n    StyledImage, \r\n    ImageWrapper, \r\n    BookPageWrapper, \r\n    DescriptionWrapper\r\n};","import { useParams } from 'react-router-dom';\r\nimport { useAppSelector } from '../../hooks/reduxHooks';\r\nimport { AppStateType } from '../../redux/store';\r\nimport { AppWrapper } from '../../style';\r\nimport { StyledImage, ImageWrapper, BookPageWrapper, DescriptionWrapper } from './style';\r\n\r\ntype ParamType = {\r\n    id: string\r\n}\r\n\r\nconst BookPage = () => {\r\n    const { id } = useParams<ParamType>();\r\n    const bookSelector = (state: AppStateType) => \r\n        state.booksData.books.items?.filter(book => \r\n        book.id === id);\r\n    \r\n    \r\n    const [book] = useAppSelector(bookSelector);\r\n    \r\n    const { authors, description, imageLinks, categories, title } = book?.volumeInfo;\r\n    \r\n    return(\r\n        <div>\r\n            <AppWrapper>\r\n                <BookPageWrapper>\r\n                   <ImageWrapper>\r\n                        <StyledImage imageUrl={imageLinks?.thumbnail && imageLinks.thumbnail}/>\r\n                    </ImageWrapper> \r\n                    <DescriptionWrapper>\r\n                        <p>\r\n                            {categories && categories.map((category, index) => \r\n                            <span key={index}>{(index ? '/ ' : '') + category}</span>)}\r\n                        </p>\r\n                        <h3>{title}</h3>\r\n                        <p>\r\n                            {authors?.map((author, index) => \r\n                            <span key={index}>{(index ? ', ' : '') + author}</span>)}\r\n                        </p>\r\n                        <p>{description}</p>\r\n                    </DescriptionWrapper>\r\n                </BookPageWrapper>\r\n                \r\n            </AppWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookPage;","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StyledTitle = styled.p`\r\n    font-weight: 800;\r\n`;\r\n\r\nconst StyledCard = styled(Link)`\r\n    background-color: rgb(242, 241, 237);\r\n    padding: 1.5rem 1rem;\r\n    width: 15rem;\r\n    height: 21rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-decoration: none;\r\n    p {\r\n        margin-top: 0.4rem;\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst StyledAuthors = styled.p`\r\n    \r\n`;\r\n\r\nconst StyledCategory = styled.p`\r\n    \r\n`;\r\n\r\nconst StyledImage = styled.div`\r\n    height: 10rem;\r\n    width: 7rem;\r\n    background: url(${(props: { imageUrl: string}) => props.imageUrl ? props.imageUrl : 'none'}) center/cover;\r\n    box-shadow: 0px 3px 8px 3px rgba(34, 60, 80, 0.2);\r\n    align-self: center;\r\n`;\r\n\r\nexport { \r\n    StyledTitle, \r\n    StyledCard, \r\n    StyledAuthors, \r\n    StyledImage,\r\n    StyledCategory\r\n};","import { \r\n    StyledCard, \r\n    StyledTitle, \r\n    StyledAuthors,\r\n    StyledImage,\r\n    StyledCategory\r\n} from './style';\r\n\r\nimport { BookType } from '../../redux/reducers/booksDataReducer/booksDataTypes';\r\n\r\ntype BookCardPorpsType = {\r\n    book: BookType\r\n};\r\n\r\nconst BookCard = (props: BookCardPorpsType) => {\r\n    const { title, authors, imageLinks, categories } = props.book.volumeInfo;\r\n    const { id } = props.book;\r\n\r\n    return(\r\n        <StyledCard to={`book/${id}`}>\r\n            <StyledImage imageUrl={imageLinks?.thumbnail && imageLinks.thumbnail}/>\r\n\r\n            <StyledCategory>{categories && categories[0]}</StyledCategory>\r\n            \r\n            <StyledTitle>{title[65] ? title.slice(0, 65) + '...' : title}</StyledTitle>\r\n\r\n            <StyledAuthors>{authors?.map((author, index) => \r\n                <span key={index}>{(index ? ', ' : '') + author}</span>)}\r\n            </StyledAuthors>\r\n\r\n        </StyledCard>\r\n    );\r\n};\r\n\r\nexport default BookCard;","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 1rem 0;\r\n`;\r\n\r\nexport { StyledButton };","import { useAppDispatch, useAppSelector } from '../../hooks/reduxHooks';\r\nimport { changeOffset, requestData } from '../../redux/reducers/booksDataReducer/booksDataReducer';\r\nimport { \r\n    offsetSelector,\r\n    searchfieldSelector, \r\n    sortingSelector \r\n} from '../../redux/reducers/booksDataReducer/selectors';\r\nimport { StyledButton } from './style';\r\n\r\nconst LoadButton = () => {\r\n    const dispatch = useAppDispatch();\r\n    const searchfield = useAppSelector(searchfieldSelector);\r\n    const sorting = useAppSelector(sortingSelector);\r\n    const offset = useAppSelector(offsetSelector);\r\n\r\n    const handleClick = () => {\r\n        dispatch(changeOffset(30));\r\n        dispatch(requestData(searchfield, sorting, offset + 30));\r\n    };\r\n\r\n    return(\r\n        <StyledButton>\r\n            <button onClick={handleClick}>Load more</button>\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default LoadButton;","import styled, { keyframes } from 'styled-components';\r\n\r\nconst load = keyframes`\r\n    0% {\r\n        -webkit-transform: rotate(0deg);\r\n        transform: rotate(0deg);\r\n    }\r\n    100% {\r\n        -webkit-transform: rotate(360deg);\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nconst StyledLoader = styled.div`\r\n    font-size: 10px;\r\n    margin: 50px auto;\r\n    text-indent: -9999em;\r\n    width: 11em;\r\n    height: 11em;\r\n    border-radius: 50%;\r\n    background: #090b15;\r\n    background: -moz-linear-gradient(left, #090b15 10%, rgba(9,11,21, 0) 42%);\r\n    background: -webkit-linear-gradient(left, #090b15 10%, rgba(9,11,21, 0) 42%);\r\n    background: -o-linear-gradient(left, #090b15 10%, rgba(9,11,21, 0) 42%);\r\n    background: -ms-linear-gradient(left, #090b15 10%, rgba(9,11,21, 0) 42%);\r\n    background: linear-gradient(to right, #090b15 10%, rgba(9,11,21, 0) 42%);\r\n    position: relative;\r\n    -webkit-animation: ${load} 1.4s infinite linear;\r\n    animation: ${load} 1.4s infinite linear;\r\n    -webkit-transform: translateZ(0);\r\n    -ms-transform: translateZ(0);\r\n    transform: translateZ(0);\r\n    overflow: hidden;\r\n    &:after {\r\n        background: white;\r\n        width: 75%;\r\n        height: 75%;\r\n        border-radius: 50%;\r\n        content: '';\r\n        margin: auto;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n    }\r\n    &:before {\r\n        width: 50%;\r\n        height: 50%;\r\n        background: #090b15;\r\n        border-radius: 100% 0 0 0;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        content: '';\r\n    }\r\n`;\r\n\r\n\r\nexport { StyledLoader };\r\n","import { StyledLoader } from './style';\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <StyledLoader>\r\n            Loading....\r\n        </StyledLoader>\r\n    );\r\n};\r\n\r\nexport default Loader;","import styled from 'styled-components';\r\n\r\n\r\nconst StyledCardWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(9rem, 18rem));\r\n    justify-items: center;\r\n    grid-row-gap: 2rem;\r\n`;\r\n\r\nconst StyledTotalItems = styled.p`\r\n    text-align: center;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst StyledHomePage = styled.div`\r\n    padding: 1rem 0;\r\n`;\r\n\r\n\r\n\r\nexport { StyledCardWrapper, StyledTotalItems, StyledHomePage };","import BookCard from '../../components/BookCard/BookCard';\r\nimport LoadButton from '../../components/LoadButton/LoadButton';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { useAppSelector } from '../../hooks/reduxHooks';\r\nimport { BookType } from '../../redux/reducers/booksDataReducer/booksDataTypes';\r\nimport { \r\n    booksSelector, \r\n    categorySelector, \r\n    isFetchingSelector, \r\n    totalItemsSelector \r\n} from '../../redux/reducers/booksDataReducer/selectors';\r\nimport { AppWrapper } from '../../style';\r\nimport {  \r\n    StyledCardWrapper, \r\n    StyledHomePage, \r\n    StyledTotalItems \r\n} from './style';\r\n\r\nconst HomePage = () => {\r\n    const books = useAppSelector(booksSelector);\r\n    const totalItems = useAppSelector(totalItemsSelector);\r\n    const isFetching = useAppSelector(isFetchingSelector);\r\n    const currentCategory = useAppSelector(categorySelector);\r\n\r\n    //Filters books according to currentCategory\r\n    const filterByCategory = (book: BookType) => {\r\n        if(currentCategory === 'All') {\r\n            return book;\r\n        } else {\r\n            if(!book.volumeInfo.categories || (book.volumeInfo.categories[0] === currentCategory)) {\r\n                return book;\r\n            };\r\n        };\r\n    };\r\n\r\n\r\n    if(isFetching && !books[0]) {\r\n        return <Loader/>;\r\n    } else {\r\n        return(\r\n            <StyledHomePage>\r\n                <AppWrapper>\r\n                    {totalItems && <StyledTotalItems>Found&nbsp;{totalItems}&nbsp;results</StyledTotalItems>}\r\n                    <StyledCardWrapper>\r\n                        {books[0] ? books.filter(filterByCategory).map(book => \r\n                            <BookCard key={book.id} book={book} />) : \r\n                            \"Please, use search to find a book.\"}\r\n                    </StyledCardWrapper>\r\n                    {books[0] && <LoadButton />}\r\n                </AppWrapper>\r\n            </StyledHomePage>\r\n        );\r\n    }; \r\n};\r\n\r\nexport default HomePage;","import { Route, Switch } from 'react-router';\nimport Header from './components/Header/Header';\nimport BookPage from './pages/BookPage/BookPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport { GlobalStyle } from './style';\n\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyle />\n      <Header />\n      <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/book/:id' component={BookPage} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { booksDataReducer } from './reducers/booksDataReducer/booksDataReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    booksData: booksDataReducer\r\n});\r\n\r\nexport default rootReducer;","import axios from 'axios';\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n};\r\n\r\n// export const baseUrl = '';\r\n\r\nexport const createInstance = (customConfig = {}) => {\r\n    const newConfig = {\r\n        ...config,\r\n        ...customConfig\r\n    };\r\n\r\n    const instance = axios.create(newConfig);\r\n\r\n    return instance;\r\n};","import { RequestDataPayloadType, RequestDataSuccessPayloadType } from '../../redux/reducers/booksDataReducer/booksDataTypes';\r\nimport { createInstance } from '../createCustomInstance';\r\n\r\n\r\nconst API = createInstance();\r\n\r\nexport const getBooksData = (payload: RequestDataPayloadType) => {\r\n    const { searchText, sorting, offset } = payload;\r\n    return (\r\n        API.get<RequestDataSuccessPayloadType>(`https://www.googleapis.com/books/v1/volumes?q=${searchText}&orderBy=${sorting}&startIndex=${offset}&maxResults=30&key=AIzaSyDgZldmbQ9gaBPrIH4BW2-83lnFwprfry4`)\r\n        .then(({data}) => data)\r\n        .catch((error: Error) => {throw error})\r\n    ); \r\n};","import { \r\n    call, \r\n    put, \r\n    SagaReturnType, \r\n    takeLatest \r\n} from 'redux-saga/effects';\r\n\r\nimport { getBooksData } from '../../services/api/booksApi';\r\n\r\nimport { \r\n    GET_DATA_REQUESTED, \r\n    requestDataError, \r\n    requestDataSuccess \r\n} from '../reducers/booksDataReducer/booksDataReducer';\r\n\r\nimport { RequestDataActionType } from '../reducers/booksDataReducer/booksDataTypes';\r\n\r\n// Define result of saga call\r\ntype GetBooksDataType = SagaReturnType<typeof getBooksData>;\r\n\r\n// Recieve books data from google api\r\nfunction* getBooksDataSaga(action: RequestDataActionType) {\r\n    try {\r\n        const data: GetBooksDataType = yield call(getBooksData, action.payload);\r\n        yield put(requestDataSuccess(data));\r\n    } catch (error) {\r\n        yield put(requestDataError(error));\r\n    };\r\n};\r\n\r\n// Watch latest data request\r\nfunction* watchGetBooksData() {\r\n    yield takeLatest(GET_DATA_REQUESTED, getBooksDataSaga);\r\n};\r\n\r\nexport { watchGetBooksData };","import { all } from 'redux-saga/effects';\r\n\r\nimport { watchGetBooksData } from './sagas/getBooksDataSaga';\r\n\r\nfunction* rootSaga() {\r\n    yield all([\r\n        watchGetBooksData(),\r\n    ]);\r\n};\r\n\r\n\r\nexport default rootSaga;","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [\r\n    applyMiddleware(sagaMiddleware)\r\n];\r\n\r\nconst composedEnhancers = composeWithDevTools(\r\n    ...middlewares\r\n);\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composedEnhancers\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// REDUX APPLICATION STATE TYPE\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n// USESELECTOR TYPE\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\n// DISPATCH TYPE\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router> \n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}